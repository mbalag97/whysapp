{"version":3,"sources":["Components/ContactListComponent/contactListComponent.js","Components/ContactListItemComponent/ContactListitem.js","Components/ContactListItemComponent/index.js","mockdata.js","Components/ContactListComponent/index.js","Components/ConversationComponent/conversationComponent.js","Components/ConversationComponent/index.js","App.js","index.js"],"names":["Container","styled","div","ProfileInfoContainer","ProfileInfoImage","img","SearchBoxComponent","SearchBoxContainerComponent","SearchIcon","SearchInput","input","ContactListItemContainer","ProfileIcon","ContactDetailsComponent","ContactInfo","ContactName","span","MessageText","MessageTime","ContactListItem","props","contactData","setSelectedChat","onClick","event","preventDefault","src","process","profileImg","name","lastMsg","lastMsgTime","CONTACT_LIST","id","MESSAGE_LIST","messageType","text","senderId","addedOn","ContactListComponent","placeholder","map","contacts","index","ProfileHeader","ChatBox","EmojiImage","MessageContainer","MessageDiv","isYours","Message","ConversationalComponent","selectedChat","useState","setText","emojiPickerVisible","setEmojiPickerVisible","messageList","setMessageList","message","pickerStyle","position","bottom","onEmojiClick","emojiObj","emoji","prev","value","onKeyDown","key","copyMessageList","push","onChange","console","log","target","onFocus","ScreenContainer","MainContainer","Placeholder","PlaceholderImage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40c6db4b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #7fe7dc;\r\n  color: black;\r\n  flex: 1.5;\r\n  height: 1vh;\r\n`;\r\nexport const ProfileInfoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background: #316879;\r\n  color: white;\r\n  padding: 13px;\r\n`;\r\nexport const ProfileInfoImage = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50%;\r\n`;\r\nexport const SearchBoxComponent = styled.div`\r\n  display: flex;\r\n  background: #7fe7dc;\r\n  padding: 10px;\r\n  border-bottom: 2px solid black;\r\n`;\r\nexport const SearchBoxContainerComponent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background: white;\r\n  border-radius: 16px;\r\n  padding: 10px;\r\n  width: 100%;\r\n`;\r\nexport const SearchIcon = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\nexport const SearchInput = styled.input`\r\n  border: none;\r\n  outline: none;\r\n  font-size: 15px;\r\n  font-family: \"WindSong\", cursive;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  width: 100%;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { ProfileInfoImage } from \"../ContactListComponent/contactListComponent\";\r\nexport const ContactListItemContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  cursor: pointer;\r\n  padding: 15px 12px;\r\n  :hover {\r\n    background: #a8eae4;\r\n  }\r\n`;\r\nexport const ProfileIcon = styled(ProfileInfoImage)`\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-right: 5px;\r\n`;\r\nexport const ContactDetailsComponent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  border-bottom: 2px solid black;\r\n  width: 100%;\r\n  padding: 5px 0px;\r\n`;\r\nexport const ContactInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  color: black;\r\n  margin: 0 12px;\r\n`;\r\nexport const ContactName = styled.span`\r\n  width: 100%;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  font-family: \"WindSong\", cursive;\r\n  color: black;\r\n`;\r\nexport const MessageText = styled.span`\r\n  width: 100%;\r\n  font-size: 12px;\r\n  font-family: \"WindSong\", cursive;\r\n  color: grey;\r\n`;\r\nexport const MessageTime = styled.span`\r\n  font-size: 10px;\r\n  font-family: \"WindSong\", cursive;\r\n  color: grey;\r\n  margin-right: 10px;\r\n  white-space: nowrap;\r\n`;\r\n","import {\r\n  ContactDetailsComponent,\r\n  ContactInfo,\r\n  ContactListItemContainer,\r\n  ContactName,\r\n  MessageText,\r\n  MessageTime,\r\n  ProfileIcon,\r\n} from \"./ContactListitem\";\r\n\r\nconst ContactListItem = (props) => {\r\n  const { contactData, setSelectedChat } = props;\r\n  const OnContactListclick = (event) => {\r\n    event.preventDefault();\r\n    setSelectedChat(contactData);\r\n  };\r\n  return (\r\n    <ContactListItemContainer onClick={OnContactListclick}>\r\n      <ProfileIcon src={process.env.PUBLIC_URL+contactData.profileImg} />\r\n      <ContactDetailsComponent>\r\n        <ContactInfo>\r\n          <ContactName>{contactData.name}</ContactName>\r\n          <MessageText>{contactData.lastMsg}</MessageText>\r\n        </ContactInfo>\r\n        <MessageTime>{contactData.lastMsgTime}</MessageTime>\r\n      </ContactDetailsComponent>\r\n    </ContactListItemContainer>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","export const CONTACT_LIST = [\r\n  {\r\n    id: \"01\",\r\n    name: \"Sachin Tendulkar\",\r\n    profileImg: \"/Images/sachin-profile.jfif\",\r\n    lastMsg: \"Hola!\",\r\n    lastMsgTime: \"12:00 PM\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    name: \"Jeff Bezos\",\r\n    profileImg: \"/Images/jeff-profile.jfif\",\r\n    lastMsg: \"Hey!\",\r\n    lastMsgTime: \"2:00 PM\",\r\n  },\r\n  {\r\n    id: \"03\",\r\n    name: \"Elon Musk\",\r\n    profileImg: \"/Images/elon-profile.jfif\",\r\n    lastMsg: \"Whatup Buddy!\",\r\n    lastMsgTime: \"4:30 AM\",\r\n  },\r\n  {\r\n    id: \"01\",\r\n    name: \"Ratan Tata\",\r\n    profileImg: \"/Images/ratan-profile.jfif\",\r\n    lastMsg: \"Sure thing\",\r\n    lastMsgTime: \"2:19 PM\",\r\n  },\r\n  {\r\n    id: \"01\",\r\n    name: \"Cristiano Ronaldo\",\r\n    profileImg: \"/Images/ronaldo-profile.jfif\",\r\n    lastMsg: \"Bye\",\r\n    lastMsgTime: \"6:30 AM\",\r\n  },\r\n];\r\n\r\nexport const MESSAGE_LIST = [\r\n  {\r\n    id: \"01\",\r\n    messageType: \"TEXT\",\r\n    text: \"Hola!\",\r\n    senderId: 0,\r\n    addedOn: \"12:00 PM\",\r\n  },\r\n  {\r\n    id: \"02\",\r\n    messageType: \"TEXT\",\r\n    text: \"Hi\",\r\n    senderId: 1,\r\n    addedOn: \"12:00 PM\",\r\n  },\r\n  {\r\n    id: \"03\",\r\n    messageType: \"TEXT\",\r\n    text: \"How's Life?\",\r\n    senderId: 0,\r\n    addedOn: \"12:01 PM\",\r\n  },\r\n  {\r\n    id: \"04\",\r\n    messageType: \"TEXT\",\r\n    text: \"Great, Here, u?\",\r\n    senderId: 1,\r\n    addedOn: \"12:02 PM\",\r\n  },\r\n  {\r\n    id: \"01\",\r\n    messageType: \"TEXT\",\r\n    text: \"I'm Good too\",\r\n    senderId: 0,\r\n    addedOn: \"12:02 PM\",\r\n  },\r\n];\r\n","import ContactListItem from \"../ContactListItemComponent\";\r\nimport { CONTACT_LIST } from \"../../mockdata\";\r\nimport {\r\n  Container,\r\n  ProfileInfoContainer,\r\n  ProfileInfoImage,\r\n  SearchBoxComponent,\r\n  SearchBoxContainerComponent,\r\n  SearchIcon,\r\n  SearchInput,\r\n} from \"./contactListComponent\";\r\nconst ContactListComponent = (props) => {\r\n  return (\r\n    <Container>\r\n      <ProfileInfoContainer>\r\n        <ProfileInfoImage src={process.env.PUBLIC_URL+\"/Images/profile-avatar.png\"} />\r\n      </ProfileInfoContainer>\r\n      <SearchBoxComponent>\r\n        <SearchBoxContainerComponent>\r\n          <SearchIcon src={process.env.PUBLIC_URL+\"/Images/search-icon.png\"} />\r\n          <SearchInput placeholder=\"Search here to chat . .. ...\" />\r\n        </SearchBoxContainerComponent>\r\n      </SearchBoxComponent>\r\n      {CONTACT_LIST.map((contacts, index) => {\r\n        return <ContactListItem contactData={contacts} key={index} setSelectedChat={props.setSelectedChat}/>;\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContactListComponent;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: black;\r\n  flex: 3;\r\n  height: 1vh;\r\n`;\r\nexport const ProfileHeader = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background: #316879;\r\n  color: white;\r\n  padding: 10px;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\nexport const ChatBox = styled.div`\r\n  display: flex;\r\n  background: #316879;\r\n  padding: 10px;\r\n  color: white;\r\n  align-items: center;\r\n  bottom: 0;\r\n`;\r\nexport const EmojiImage = styled.img`\r\n  width: 25px;\r\n  height: 25px;\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n`;\r\nexport const MessageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 1vh;\r\n  overflow-y: auto;\r\n`;\r\nexport const MessageDiv = styled.div`\r\n  justify-content: ${(props) => (props.isYours ? \"flex-end\" : \"flex-start\")};\r\n  display: flex;\r\n  margin: 5px 15px;\r\n`;\r\nexport const Message = styled.div`\r\nbackground: ${(props) => (props.isYours ? \"#f47a60\" : \"#7fe7dc\")};\r\nborder-radius: 15px;\r\n  color: black;\r\n  padding: 8px10px;\r\n  font-size: 12px;\r\n  max-width: 50%;\r\n  padding 10px 12px;\r\n`;\r\n","import {\r\n  SearchBoxContainerComponent,\r\n  SearchInput,\r\n} from \"../ContactListComponent/contactListComponent\";\r\nimport { ProfileIcon } from \"../ContactListItemComponent/ContactListitem\";\r\nimport {\r\n  ChatBox,\r\n  Container,\r\n  EmojiImage,\r\n  Message,\r\n  MessageContainer,\r\n  MessageDiv,\r\n  ProfileHeader,\r\n} from \"./conversationComponent\";\r\nimport { MESSAGE_LIST } from \"../../mockdata\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport { useState } from \"react\";\r\nconst ConversationalComponent = (props) => {\r\n  const { selectedChat } = props;\r\n  const [text, setText] = useState(\"\");\r\n  const [emojiPickerVisible, setEmojiPickerVisible] = useState(false);\r\n  const [messageList, setMessageList] = useState(MESSAGE_LIST);\r\n  const handleEmojiIconClick = (event) => {\r\n    event.preventDefault();\r\n    setEmojiPickerVisible((prev) => !prev);\r\n  };\r\n  const handleTextChange = (event) => {\r\n    event.preventDefault();\r\n    setEmojiPickerVisible(false);\r\n    console.log(event.target.value);\r\n    setText(event.target.value);\r\n  };\r\n  const handleInputFocus = (event) => {\r\n    event.preventDefault();\r\n    setEmojiPickerVisible(false);\r\n  };\r\n  const onEmojiClick = (event, emojiObj) => {\r\n    event.preventDefault();\r\n    setText(text + \" \" + emojiObj.emoji);\r\n    setEmojiPickerVisible(false);\r\n  };\r\n  const handleEnterPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      const copyMessageList = [...messageList];\r\n      copyMessageList.push({\r\n        id: \"01\",\r\n        messageType: \"TEXT\",\r\n        text: text,\r\n        senderId: 0,\r\n        addedOn: \"12:02 PM\",\r\n      });\r\n      setMessageList(copyMessageList);\r\n      setText(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <ProfileHeader>\r\n        <ProfileIcon src={process.env.PUBLIC_URL + selectedChat.profileImg} />\r\n        {selectedChat.name}\r\n      </ProfileHeader>\r\n      <MessageContainer>\r\n        {messageList.map((message, index) => {\r\n          return (\r\n            <MessageDiv key={index} isYours={message.senderId === 0}>\r\n              <Message isYours={message.senderId === 0}>{message.text}</Message>\r\n            </MessageDiv>\r\n          );\r\n        })}\r\n      </MessageContainer>\r\n      <ChatBox>\r\n        <SearchBoxContainerComponent>\r\n          {emojiPickerVisible && (\r\n            <Picker\r\n              pickerStyle={{ position: \"absolute\", bottom: \"60px\" }}\r\n              onEmojiClick={onEmojiClick}\r\n            />\r\n          )}\r\n          <EmojiImage\r\n            src={process.env.PUBLIC_URL + \"/Images/emoji-image.png\"}\r\n            onClick={handleEmojiIconClick}\r\n          />\r\n          <SearchInput\r\n            placeholder=\"Start the conversation . .. ...\"\r\n            value={text}\r\n            onKeyDown={handleEnterPress}\r\n            onChange={handleTextChange}\r\n            onFocus={handleInputFocus}\r\n          />\r\n        </SearchBoxContainerComponent>\r\n      </ChatBox>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ConversationalComponent;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ContactListComponent from \"./Components/ContactListComponent\";\r\nimport ConversationalComponent from \"./Components/ConversationComponent\";\r\n\r\nconst ScreenContainer = styled.div`\r\nbackground: black;\r\nheight: 1vh;\r\nwidth: 100%;\r\nmargin: 0px;\r\npadding: 0px;\r\n`;\r\nconst MainContainer = styled.div`\r\n  width: 1500px;\r\n  background: #ced7d8;\r\n  font-family: \"WindSong\", cursive;\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 100vh;\r\n  color: black;\r\n  font-weight: bold;\r\n  margin: auto;\r\n`;\r\nconst Placeholder = styled.div`\r\n  flex: 3;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  background: #efefef;\r\n  gap: 10px;\r\n  span {\r\n    font-size: 32px;\r\n    color: black;\r\n    font-weight: bold;\r\n  }\r\n`;\r\nconst PlaceholderImage = styled.img``;\r\nconst App = () => {\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  return (\r\n    <ScreenContainer>\r\n      <MainContainer>\r\n        <ContactListComponent setSelectedChat={setSelectedChat} />\r\n        {selectedChat ? (\r\n          <ConversationalComponent selectedChat={selectedChat} />\r\n        ) : (\r\n          <Placeholder>\r\n            <PlaceholderImage src=\"/Images/cell-tower.png\" />\r\n            <span>Keep Your Phone Conected</span>\r\n            Have funn with your friends circle.\r\n          </Placeholder>\r\n        )}\r\n      </MainContainer>\r\n    </ScreenContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}